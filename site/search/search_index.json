{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Code Snippets Repository","text":"<p>This repository is where I keep useful code snippets, handy scripts, and quick solutions I use often or might need in the future. Instead of searching through old projects or rewriting the same code, I can just grab what I need from here.</p> <p>It's a mix of utility functions, small automation scripts, and coding tricks that save time and effort. If anything here helps you, feel free to use it too!</p> <p>Happy coding! \ud83d\ude80</p>","tags":[]},{"location":"python/plotting/add_fonts/","title":"add_fonts","text":"<pre><code># A pseudo scenario\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.arange(0, 100, 0.2)\ny = x**2\n\nfig, ax = plt.subplots(figsize=(6, 4))\nax.plot(x, y)\n</code></pre>","tags":[]},{"location":"python/plotting/add_fonts/#option1-fonts-installed-and-setup-in-global-scope","title":"Option1: Fonts installed and Setup in global scope","text":"<p>If a particular font is already installed in the development machine/system and for the plotting you want to use it in each plot (ie. global scope)</p> <pre><code>plt.rcParams['font.family'] = 'Times New Roman'\n</code></pre>","tags":[]},{"location":"python/plotting/add_fonts/#option2-fonts-installed-and-setup-plot-element-specific","title":"Option2: Fonts installed and Setup Plot Element specific","text":"<p>Tip: Most of the text contatining elements have <code>font</code> or similar keyword argument <pre><code>ax.set_title('x vs y', font='Times New Roman')  # Title\nax.set_xlabel('x m/s', font='Arial')  # Label\nax.set_xticks(\n    np.arange(0, 100, 20),\n    lables=np.arange(0, 100, 20),\n    font='Source Code Pro'\n)  # tick labels\n</code></pre></p>","tags":[]},{"location":"python/plotting/add_fonts/#list-the-font-names-available-to-matplotlib","title":"List The font names available to matplotlib","text":"<p>from StackOverflow <pre><code>from matplotlib import font_manager\n</code></pre></p> <pre><code>sorted(font_manager.get_font_names())\n</code></pre>","tags":[]},{"location":"python/plotting/add_fonts/#load-a-font-file-without-systemwide-installation","title":"Load a font file without systemwide installation","text":"<pre><code>from matplotlib import font_manager\n</code></pre> <pre><code>font_path = \"path/to/font.ttf\"  \nfont_props = font_manager.FontProperties(fname=font_path)\n\nax.plot(x, y)\n\n# Apply the custom font\nax.set_title(\"x vs y\", fontproperties=font_props, fontsize=14)\nax.set_xlabel(\"X-axis Label\", fontproperties=font_props)\nax.set_ylabel(\"Y-axis Label\", fontproperties=font_props)\nax.legend(prop=font_props)\n</code></pre>","tags":[]},{"location":"python/plotting/misc/","title":"Misc","text":"","tags":[]},{"location":"python/plotting/misc/#use-figure-toolbars","title":"Use figure toolbars","text":"<p>Use matplotlib toolbars in jupyter notebook environment.</p> <pre><code>matplotlib.use('nbagg')  # For Tool bars in plot\n</code></pre>","tags":[]},{"location":"python/plotting/misc/#use-latex-in-global-scope","title":"Use Latex in global scope","text":"<p>It will display numbers in latex format and also the formula.</p> <pre><code>plt.rcParams['text.usetex'] = True\n</code></pre>","tags":[]},{"location":"python/plotting/misc/#format-dates-in-axis","title":"Format Dates in axis","text":"<p>Let's say I only want to show hours and minutes in the time axis (x-axis)</p> <pre><code>from matplotlib.dates import DateFormatter\n\ntime_format = DateFormatter(\"%H:%M\")\n\nax.xaxis.set_major_formatter(time_format)\n</code></pre> <p>python date string formats are found here</p>","tags":[]}]}